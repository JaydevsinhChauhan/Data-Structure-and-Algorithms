#include<iostream>
using namespace std;
struct node
{
    int data;
    struct node *next;
};
void push(struct node **head,int data)
{
    struct node *temp=new node();
    temp->data=data;
    temp->next=*head;
    *head=temp;
}
void display(struct node *head)
{
    while(head)
    {
        cout<<head->data<<" ";
        head=head->next;
    }
    cout<<endl;
}
void front_back_split(struct node *head, struct node **a, struct node **b)
{
    struct node *slow=head, *fast=head->next;
     while (fast != NULL)
    {
        fast = fast->next;
        if (fast != NULL)
        {
            slow = slow->next;
            fast = fast->next;
        }
    }
    *a=head;
    *b=slow->next;
    slow->next=NULL;
}
struct node* merge(struct node *a, struct node *b)
{
    node *result=NULL;
    if(a==NULL) return b;
    if(b==NULL) return a;
    if(a->data<b->data)
    {
        result=a;
        result->next=merge(a->next,b);
    }
    else
    {
        result=b;
        result->next=merge(a,b->next);
    }
    return result;
}
void mergesort(struct node **head)
{
    struct node *head1=*head;
    struct node *a, *b;
    if(head1==NULL || head1->next==NULL) return;
    front_back_split(head1,&a,&b);
    mergesort(&a);
    mergesort(&b);
    *head=merge(a,b);
}
int main(void)
{
    struct node *head=NULL;
    push(&head,6);
    push(&head,1);
    push(&head,2);
    push(&head,7);
    push(&head,4);
    push(&head,8);
    display(head);
    mergesort(&head);
    display(head);
    return 0;
}
